server {
  server_name {{ nginx_subdomain }}{{ nginx_domain }};
  listen   80;
  listen [::]:80;

  return 301 https://$host$request_uri;
}

# upstream backend_{{ nginx_subdomain | replace('.','') }} {
#     ip_hash;

#     server {{ nginx_upstream }};
# }

server {
  server_name {{ nginx_subdomain }}{{ nginx_domain }};

  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  include snippets/ssl.conf;

{% if existing_certs is defined and existing_certs|bool==true %}
  ssl_certificate {{ ssl_certs_path }}/{{ nginx_domain }}.crt;
  ssl_certificate_key {{ ssl_private_path }}/{{ nginx_domain }}.key;
{% elif container_cert_path is defined %}
  ssl_certificate {{ container_cert_path }};
  ssl_certificate_key {{ container_key_path }};
{% endif %}

  access_log  /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log warn;

  # # Redirect server error pages to the static page /50x.html
  # #
  # error_page   500 502 503 504  /50x.html;
  # location = /50x.html {
  #         root   /etc/nginx/html;
  # }
  
  # error_page   403 /403.html;
  # location = /403.html {
  #         root   /etc/nginx/html;
  # }

{% if existing_certs is defined and existing_certs|bool==false %}
  location /.well-known/acme-challenge {
      types { } default_type "text/plain";
      root /var/www/letsencrypt;
      try_files $uri $uri/ =404;
      break;
  }
{% endif %}

{% if auth_proxy is defined and auth_proxy|bool==true %}
 location /auth/login {
   return 301 https://$host/auth/external/openid-connect.{{ auth_proxy_client }};
 }
{% endif %}

 location / {
{% if include_auth is defined and include_auth|bool==true %}
  include snippets/{{ access_group }}_auth.conf;
{% endif %}
{% if include_xframe is defined and include_xframe|bool==true %}
    proxy_hide_header X-Frame-Options;
    add_header X-Frame-Options "ALLOW-FROM {{ nginx_subdomain }}{{ nginx_domain }}";
    add_header X-Frame-Options "ALLOW-FROM only.{{ nginx_domain }}";
    proxy_hide_header Content-Security-Policy;
    add_header Content-Security-Policy "frame-ancestors *.{{ nginx_domain }}";
{% endif %}

#https://stackoverflow.com/questions/32084604/why-is-keycloak-removing-the-ssl-in-the-redirect-uri
    #proxy_pass    http://backend_{{ nginx_subdomain | replace('.','') }};
    set $upstream {{ nginx_upstream }};
    proxy_pass          $upstream;        
 }

}