TAIL=20
d=$$(date +%Y%m%d_%H:%M:%S)

DB := $$(docker ps -a | grep "Up" | awk '{print $$NF}' | grep -w "{{ deploy_name }}_{{ deploy_name }}_db\.*")
KANBAN := $$(docker ps -a | grep "Up" | awk '{print $$NF}' | grep -w "{{ deploy_name }}_{{ deploy_name }}\.*")
NGINX := $$(docker ps -a | grep "Up" | awk '{print $$NF}' | grep -w "{{ nginx_stack }}_nginx-proxy\.*")

completebackup: bckup stopapp bckupdb rm deploy purge
hotbackup: bckup bckupdb purge

rm:
	docker stack rm {{ deploy_name }}

stopapp:
	docker stop $(KANBAN)

deploy:
	docker stack deploy -c docker-compose.yml {{ deploy_name }} && docker exec -it $(NGINX) nginx -s reload

ps:
	docker stack ps {{ deploy_name }} --no-trunc

log:
	docker service logs -f $(KANBAN) --tail ${TAIL} --raw

logdb:
	docker service logs -f $(DB) --tail ${TAIL}

exec:
	docker exec -it $(KANBAN) /bin/bash

execdb:
	docker exec -it $(DB) /bin/bash

bckup:
	docker exec $(KANBAN) sh -c 'exec tar -cv /app/public' | gzip > {{ user_path }}/{{ deploy_name }}/backup/data_"$d".tar.gz

bckupdb:
	docker exec $(DB) sh -c 'exec pg_dump -Fc --dbname=postgresql://"$$POSTGRES_USER":"$$POSTGRES_PASSWORD"@127.0.0.1:5432/{{ kanban_postgres_db }}' | gzip > {{ user_path }}/{{ deploy_name }}/backup/{{ kanban_postgres_db }}_"$d".sql.gz

restore:
	gunzip -c $(file) | docker cp - $(KANBAN):/

restoredb:
	gunzip -c $(file) | docker exec -i $(DB) sh -c 'exec pg_restore --clean --dbname=postgresql://"$$POSTGRES_USER":"$$POSTGRES_PASSWORD"@127.0.0.1:5432/{{ kanban_postgres_db }}'

purge:
	find {{ user_path }}/{{ deploy_name }}/backup/*.sql.gz  -mtime +10 -delete &> /dev/null && find {{ user_path }}/{{ deploy_name }}/backup/data_*.gz  -mtime +10 -delete &> /dev/null